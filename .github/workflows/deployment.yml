name: deployment

on:
  push:
    branches:
      - "feature/deployment"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Building Script
        run: |
          sudo apt-get update && sudo apt-get install -y python3 git lua5.1
          echo "GIT_VERSION=\"$(git rev-parse HEAD)\" ; GIT_BRANCH=\"$GITHUB_REF_NAME\"" >> vrp/buildinfo.lua
          python3 build/lint.py
          python3 build/buildscript.py --branch $GITHUB_REF_NAME
          python3 build/packAssets.py
          ./build/make_archives.sh
          wget -q -O build/ml_jwt.so https://github.com/eXo-OpenSource/ml_jwt/releases/download/1.0-wip/ml_jwt.so
          wget -q -O build/ml_redis.so https://github.com/eXo-OpenSource/ml_redis/releases/download/1.0-wip/ml_redis.so
      -
        name: Building Docker
        run: |
          docker build -t rl-mta .
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          DOCKERTAG=latest-$(echo $GITHUB_REF_NAME | tr -d /)
          [ "$GITHUB_REF_NAME" == "master" ] && DOCKERTAG=latest
          docker tag rl-mta ghcr.io/$GITHUB_REPOSITORY:$DOCKERTAG
          docker push ghcr.io/$GITHUB_REPOSITORY:$DOCKERTAG
  
  
  deploy-development:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/feature/deployment'
    steps:
      -
        name: Deploy to development
        run: |
          curl http://${{ secrets.DEPLOYRON_IP }}:6000/deploy/mta_development?APISecret=${{ secrets.DEPLOY_API_SECRET_DEVELOPMENT }}
          
  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/release/production'
    steps:
      -
        name: Deploy to production
        run: |
          curl http://${{ secrets.DEPLOYRON_IP }}:6000/deploy/mta_production?APISecret=${{ secrets.DEPLOY_API_SECRET_PRODUCTION }}
